# This is the runfile for an AMPL model for the class project (phase 2)
# IEMS 313

# Start log file
option log_file solutions.log;

printf('################################### BASE CASE ##################################\n');

reset;

# Choose the CPLEX solver
option solver cplex;

# The following options do the following:
# mipdisplay=2 : show output for te branch-and-bound search
#                  (try to make sense out of the individual columns)
# mipgap=1e-8  : Ask for a highly accurate solution
option cplex_options 'mipdisplay=2 mipgap=1e-8';

# Load the model
model network_design.mod;

# Load the data for small problem when reloading buildings cost $1 million
data network_design_small_1M.dat;

solve;

printf('\n');
printf('Number of reloading buildings at each station:\n');
display x_num_reload_bldg;
printf('Line exists between stations i and j:\n');
display x_line_exist;
printf('Number of tracks from station i to station j:\n');
display x_num_tracks;
printf('Number of units of shipment from station s to station d that go on arc (i,j):\n');
display x_num_units;


printf('################################### SCENARIO 1 #################################\n');

reset;

# Choose the CPLEX solver
option solver cplex;

# The following options do the following:
# mipdisplay=2 : show output for te branch-and-bound search
#                  (try to make sense out of the individual columns)
# mipgap=1e-8  : Ask for a highly accurate solution
option cplex_options 'mipdisplay=2 mipgap=1e-8';

# Load the model
model network_design.mod;

# Load the data for scenario 1 when reloading buildings cost $1 million
data scenario1_1M.dat;

solve;

printf('\n');
printf('Number of reloading buildings at each station:\n');
display x_num_reload_bldg;
printf('Line exists between stations i and j:\n');
display x_line_exist;
printf('Number of tracks from station i to station j:\n');
display x_num_tracks;
printf('Number of units of shipment from station s to station d that go on arc (i,j):\n');
display x_num_units;

printf('################################### SCENARIO 2 #################################\n');

reset;

# Choose the CPLEX solver
option solver cplex;

# The following options do the following:
# mipdisplay=2 : show output for te branch-and-bound search
#                  (try to make sense out of the individual columns)
# mipgap=1e-8  : Ask for a highly accurate solution
option cplex_options 'mipdisplay=2 mipgap=1e-8';

# Load the model
model network_design.mod;

# Load the data for scenario 2 when reloading buildings cost $1 million
data scenario2_1M.dat;

solve;

printf('\n');
printf('Number of reloading buildings at each station:\n');
display x_num_reload_bldg;
printf('Line exists between stations i and j:\n');
display x_line_exist;
printf('Number of tracks from station i to station j:\n');
display x_num_tracks;
printf('Number of units of shipment from station s to station d that go on arc (i,j):\n');
display x_num_units;

printf('################################### SCENARIO 3 #################################\n');

reset;

# Choose the CPLEX solver
option solver cplex;

# The following options do the following:
# mipdisplay=2 : show output for te branch-and-bound search
#                  (try to make sense out of the individual columns)
# mipgap=1e-8  : Ask for a highly accurate solution
option cplex_options 'mipdisplay=2 mipgap=1e-8';

# Load the model
model network_design.mod;

# Load the data for scenario 3 when reloading buildings cost $1 million
data scenario3_1M.dat;

solve;

printf('\n');
printf('Number of reloading buildings at each station:\n');
display x_num_reload_bldg;
printf('Line exists between stations i and j:\n');
display x_line_exist;
printf('Number of tracks from station i to station j:\n');
display x_num_tracks;
printf('Number of units of shipment from station s to station d that go on arc (i,j):\n');
display x_num_units;

# Stop log file
option log_file '';
close;